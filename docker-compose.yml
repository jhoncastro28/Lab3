version: "3.8"
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    volumes:
      - zookeeper_data:/var/lib/zookeeper
    networks:
      - kafka-network
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "2181"]
      interval: 10s
      timeout: 5s
      retries: 5

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_HOST://kafka:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,PLAINTEXT_HOST://0.0.0.0:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_CREATE_TOPICS: "movie-events:1:1"
      KAFKA_CLUSTER_ID: my-cluster-id
    volumes:
      - kafka_data:/var/lib/kafka/data
    depends_on:
      zookeeper:
        condition: service_healthy
    networks:
      - kafka-network
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "9092"]
      interval: 10s
      timeout: 5s
      retries: 5

  producer:
    build:
      context: ./producer
    container_name: movie-producer
    environment:
      - KAFKA_BROKERS=kafka:9092
      - KAFKA_TOPIC=movie-events
      - PRODUCER_PORT=3002
    networks:
      - kafka-network
    ports:
      - "3002:3002"
    depends_on:
      kafka:
        condition: service_healthy

  consumer-analytics:
    build:
      context: ./consumer-analytics
    container_name: consumer-analytics
    environment:
      - KAFKA_BROKERS=kafka:9092
      - KAFKA_TOPIC=movie-events
      - SOCKET_SERVER_PORT=3003
    networks:
      - kafka-network
    ports:
      - "3003:3003"
    depends_on:
      kafka:
        condition: service_healthy

  consumer-notifications:
    build:
      context: ./consumer-notifications
    container_name: consumer-notifications
    environment:
      - KAFKA_BROKER=kafka:9092
      - KAFKA_TOPIC=movie-events
      - SMTP_HOST=smtp.gmail.com
      - SMTP_PORT=587
      - SMTP_USER=jhoncastrom28@gmail.com
      - SMTP_PASSWORD=${SMTP_PASSWORD}
      - SMTP_FROM_EMAIL=jhoncastrom28@gmail.com
      - NOTIFICATIONS_PORT=3004
    networks:
      - kafka-network
    ports:
      - "3004:3004"
    depends_on:
      kafka:
        condition: service_healthy

  db:
    image: mysql:8.0
    container_name: mysql-container
    environment:
      MYSQL_ROOT_PASSWORD: root1234
      MYSQL_DATABASE: movies_db
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "3306:3306"
    networks:
      - kafka-network

volumes:
  kafka_data:
    driver: local
  zookeeper_data:

networks:
  kafka-network:
    driver: bridge
